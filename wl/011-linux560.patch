diff --git a/src/shared/linux_osl.c b/src/shared/linux_osl.c
index 9adc392..1610712 100644
--- a/src/shared/linux_osl.c
+++ b/src/shared/linux_osl.c
@@ -946,7 +946,11 @@ osl_getcycles(void)
 void *
 osl_reg_map(uint32 pa, uint size)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 6, 0)
+	return (ioremap((unsigned long)pa, (unsigned long)size));
+#else
 	return (ioremap_nocache((unsigned long)pa, (unsigned long)size));
+#endif
 }
 
 void
diff --git a/src/wl/sys/wl_linux.c b/src/wl/sys/wl_linux.c
index 211f137..86dd7df 100644
--- a/src/wl/sys/wl_linux.c
+++ b/src/wl/sys/wl_linux.c
@@ -586,7 +586,11 @@ wl_attach(uint16 vendor, uint16 device, ulong regs,
 	}
 	wl->bcm_bustype = bustype;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 6, 0)
+	if ((wl->regsva = ioremap(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
+#else
 	if ((wl->regsva = ioremap_nocache(dev->base_addr, PCI_BAR0_WINSZ)) == NULL) {
+#endif
 		WL_ERROR(("wl%d: ioremap() failed\n", unit));
 		goto fail;
 	}
@@ -776,7 +780,11 @@ wl_pci_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if ((val & 0x0000ff00) != 0)
 		pci_write_config_dword(pdev, 0x40, val & 0xffff00ff);
 		bar1_size = pci_resource_len(pdev, 2);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 6, 0)
+		bar1_addr = (uchar *)ioremap(pci_resource_start(pdev, 2),
+#else
 		bar1_addr = (uchar *)ioremap_nocache(pci_resource_start(pdev, 2),
+#endif
 			bar1_size);
 	wl = wl_attach(pdev->vendor, pdev->device, pci_resource_start(pdev, 0), PCI_BUS, pdev,
 		pdev->irq, bar1_addr, bar1_size);
